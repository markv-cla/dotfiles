#!/usr/bin/env bash

[[ $- == *i* ]] && echo "> ${BASH_SOURCE[0]}"

function _git_prompt() {
  # adapted from:
  #   http://www.opinionatedprogrammer.com/2011/01/colorful-bash-prompt-reflecting-git-status/
  local git_status="$(git status -unormal 2>&1)"

  if ! [[ "${git_status,,}" =~ 'not a git repo' ]]; then
    if [[ "${git_status}" =~ 'nothing to commit' ]]; then
      local ansifg=30     # Bold Black
      local ansibg=42     # BG Green
    elif [[ "${git_status}" =~ 'Changes not staged' ]]; then
      local ansifg=37     # Bold White
      local ansibg=41     # BG Red
    elif [[ "${git_status}" =~ 'Untracked files:' ]]; then
      local ansifg=37     # Bold White
      local ansibg=43     # BG Yellow
    else
      local ansifg=37     # Bold White
      local ansibg=45     # BG Magenta
    fi

    if [[ "${git_status}" =~ "On branch ([^[:space:]]+)" ]]; then
      branch=${BASH_REMATCH[1]}
      test "${branch}" != "master" || branch=' '
    else
      # Detached HEAD.  (branch=HEAD is a faster alternative.)
      branch="$(git describe --all --contains --abbrev=4 HEAD 2> /dev/null || echo HEAD)"
    fi
    # echo -n '[\[\e[0;37;'"${ansi}"';1m\]'"${branch}"'\[\e[0m\]] '
    echo -n '[\[\e[0;'"${ansifg}"';'"${ansibg}"';1m\]'"${branch}"'\[\e[0m\]] '

  fi
}

function _venv_prompt () {
  if test -z "${VIRTUAL_ENV}" ; then
    echo -n ""
  else
    echo -n "($(basename ${VIRTUAL_ENV})) "
  fi
}

function _prompt_command() {
  PS1="$(_venv_prompt)$(_git_prompt)"'[\u@\h \[\e[1;34m\]\w\[\e[0m\]]\$ '
}

function _short_prompt_command() {
  # quick set a generic prompt (makes life easier when creating documentation etc)
  PS1="[user@host \w]\$ "
}

export PROMPT_COMMAND="_prompt_command; "

[[ $- == *i* ]] && echo "< ${BASH_SOURCE[0]}"
